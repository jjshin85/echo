<div align="center">
<h4>Welcome Back <%=@user.first_name.capitalize %></h4>

<%= image_tag @user.avatar.url(:thumb) %>

<h6>Username: <%= @user.username %></h6>
<h6>Member Since: <%= @user.created_at %></h6>


<form class="button_to" method="get" action="/maps"><i class="btn waves-effect waves-light teal darken-3 waves-input-wrapper" style=""><input class="waves-button-input" type="submit" value="Map"></i></form>

<h4>Recent Echos</h4>
  <% @user.pins.each do |pin| %>
    <%= pin.song %>
    <%= pin.comment %>
    <br>
    <%=link_to "Edit", edit_pin_path(pin.id) %>
    <br>
  <% end %>
</div>
<!--Below will be the link to see all of your frinds -->
<!-- # button_to "Your Friends", friends_path -->

<div align="right">
<%=link_to "Account Settings", edit_user_path%>
</div>
   <div id="login" align="right">
        <button id="login-button" class="btn btn-primary">Log in with Spotify</button>
      </div>
    </div>
    <script>
      (function() {



        var stateKey = 'spotify_auth_state';

        /**
         * Obtains parameters from the hash of the URL
         * @return Object
         */
        function getHashParams() {
          var hashParams = {};
          var e, r = /([^&;=]+)=?([^&;]*)/g,
              q = window.location.hash.substring(1);
          while ( e = r.exec(q)) {
             hashParams[e[1]] = decodeURIComponent(e[2]);
          }
          return hashParams;
        }

        /**
         * Generates a random string containing numbers and letters
         * @param  {number} length The length of the string
         * @return {string} The generated string
         */
        function generateRandomString(length) {
          var text = '';
          var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';

          for (var i = 0; i < length; i++) {
            text += possible.charAt(Math.floor(Math.random() * possible.length));
          }
          return text;
        };

        var params = getHashParams();

        var access_token = params.access_token,
            state = params.state,
            storedState = localStorage.getItem(stateKey);


        //var data = {spotify_token: access_token};
        if (access_token && (state == null || state !== storedState)) {
          alert('There was an error during the authentication');
        } else {
          localStorage.removeItem(stateKey);
          if (access_token) {
            $.ajax({
                url: 'https://api.spotify.com/v1/me',
                headers: {
                  'Authorization': 'Bearer ' + access_token
                },
                success: function(response) {
                  userProfilePlaceholder.innerHTML = userProfileTemplate(response);
                  $('#login').hide();
                  $('#loggedin').show();
                }
            });
          } else {
              $('#login').show();
              $('#loggedin').hide();
          }


          document.getElementById('login-button').addEventListener('click', function() {

            var client_id = '12e06da5c2414e63992a502036e9e915'; // Your client id
            var redirect_uri = 'http://localhost:3000/maps'; // Your redirect uri

            var state = generateRandomString(16);

            localStorage.setItem(stateKey, state);
            var scope = 'user-read-private user-read-email';

            var url = 'https://accounts.spotify.com/authorize';
            url += '?response_type=token';
            url += '&client_id=' + encodeURIComponent(client_id);
            url += '&scope=' + encodeURIComponent(scope);
            url += '&redirect_uri=' + encodeURIComponent(redirect_uri);
            url += '&state=' + encodeURIComponent(state);

            window.location = url;

          }, false);
        }
      })();
</script>
